% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_DevelTools.R
\name{handle_trycache_error}
\alias{handle_trycache_error}
\title{how to proced in terms of an trycache error}
\usage{
handle_trycache_error(err, task, enable.quit = FALSE)
}
\arguments{
\item{err}{try-error error-function}

\item{task}{character}

\item{enable.quit}{logical}
}
\value{
a console print and a txt-file in the output.dir
}
\description{
creates a message string constisting of the error mesage produced in the try chache and its the task defined by the user.
Writes the message into the console and into a textfile named by "error_message.txt", located in the output. dir.
if \code{enable.quit} is set \code{TRUE} R execution will quit without saving
}
\examples{
{
output.dir <- getwd()
enable.quit<- FALSE
task<-"test"

testthat::expect_warning(
tryCatch({
log(-1)
 }, error = function(err) {handle_trycache_error(err,task,enable.quit)})
)
testthat::expect_warning(
tryCatch({
task<-"test_2"
log(-1)
 }, error = function(err) {handle_trycache_error(err,task,enable.quit)})
)
testthat::expect_warning(
 tryCatch({
log(-1)
 }, error = function(err) {handle_trycache_error(err,task,enable.quit)})
)

 }
}
\concept{RJob execution}
\keyword{internal}
