% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_all_attributes_in_EDL.R
\name{find_all_attributes_in_EDL}
\alias{find_all_attributes_in_EDL}
\title{find_all_attributes_in_EDL()}
\usage{
find_all_attributes_in_EDL(EDL)
}
\arguments{
\item{EDL}{:character containing a XML string}
}
\value{
a list of 3 dataframes df, df_longer, df_wider
}
\description{
Reads a XML string, extracts all nodes, attributes and paths, reorganize the data and returns 3 different dataframes
}
\details{
Die Funktion erzeugt zunächst aus dem EDL String ein XML formatiertes Objekt.
Von diesem XML Objekt werden alle Knoten ermittelt und für jeden Knoten ein XML-Nodeset, einschließlich der Dokumentwurzel, erstellt und als Spalte xml_node in den dataframe df eingefügt.
Ausgehend von den Nodesets wird für jeden Knoten der Name und der Pfad sowie alle Attribute ermittelt bzw. extrahiert und als Spalten node_name, node_path, node_attribute in df eingefügt.
Dabei ist im dataframe df die Spalte node_attributes eine genestete Spalte, die je nach Knoten eine unterschiedliche Anzahl an Attributen enthalten kann.
Die genestete Spalte node_attributes wird zwei reguläre Spalten node_attributes,node_attributes_id transformiert und mit den Spalten node_name,node_path,xml_node zum df-longer zusammengefasst.
Der df_wider enthält die gleichen Daten wie df_longer, mit dem Unterschied das für jeden Attributnamen eine Spalte eingefügt wurde, und die Attributwerte somit horizontal verteilt werden,  sodass die Zeilenanzahl der vom df entspricht.
}
\examples{
if(FALSE){

result_list <- find_all_attributes_in_EDL(EDL)
}

}
\seealso{
Other database related: 
\code{\link{connect_mongoDB}()},
\code{\link{extract_chip_IDs}()},
\code{\link{extract_files_to_process}()},
\code{\link{extract_gate_names}()},
\code{\link{extract_gates_to_process}()},
\code{\link{extract_jobtype}()},
\code{\link{find_server_path}()},
\code{\link{query_mongoDB}()}
}
\concept{database related}
